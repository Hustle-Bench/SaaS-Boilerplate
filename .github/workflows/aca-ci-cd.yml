name: Build & Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]          # run automatically on every push to main
  workflow_dispatch:            # plus a manual “Run workflow” button

# ---------- Global constants you’ll reuse ----------
env:
  AZURE_LOCATION: canadacentral    # change if your ACA is in another region
  CONTAINER_APP:  app-saas         # name of the Container App resource
  RESOURCE_GROUP: rg-saas          # RG that holds the Container App
  REGISTRY:       ${{ secrets.REGISTRY_LOGIN_SERVER }}  # crsaas7700.azurecr.io

jobs:
  build-deploy:
    runs-on: ubuntu-latest

    steps:
    # 1️⃣  Pull down your repo’s code
    - uses: actions/checkout@v4

    # 2️⃣  Log in to Azure with the JSON you stored as AZURE_CREDENTIALS
    - uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    # 3️⃣  Build → push → deploy in ONE action (no ACR Tasks)
    - uses: azure/container-apps-deploy-action@v1
      with:
        # Where to push / pull the image
        acrName:          ${{ env.REGISTRY }}
        containerAppName: ${{ env.CONTAINER_APP }}
        resourceGroup:    ${{ env.RESOURCE_GROUP }}

        # Tag image with the Git commit SHA so every build is unique
        imageToBuild: ${{ env.REGISTRY }}/${{ env.CONTAINER_APP }}:${{ github.sha }}

        # ACR credentials (stored in repo secrets)
        registryUsername: ${{ secrets.REGISTRY_USERNAME }}
        registryPassword: ${{ secrets.REGISTRY_PASSWORD }}

        # Runtime env-vars for the container
        environmentVariables: |
          DATABASE_URL=${{ secrets.DATABASE_URL }}
          NEXTAUTH_URL=https://${{ env.CONTAINER_APP }}.${{ env.AZURE_LOCATION }}.azurecontainerapps.io
          NEXTAUTH_SECRET=${{ secrets.NEXTAUTH_SECRET }}
          STRIPE_SECRET_KEY=${{ secrets.STRIPE_SECRET_KEY }}
